var form = new function() {

  this.instance = null;
  this.template = "<h1>{{ title }}</h1><form id= 'form'>{{ inputs }}<hr><button type='reset'>Cancel</button> <button type='submit'>Ok</button></form>";

  this.createInstance = function() {
    var form = document.createElement("div");
    form.setAttribute("class", "modal form");
    document.body.appendChild(form);

    this.instance = form;
  }

  this.renderStringInput = function(json) {
    // fixme: what if value is missing, and add required attribute and connect label for attribute with autogenerated id
    stringInput = "<label>" + json.label + "</label><input type='text' value='" + json.value + "' id='string-input' required />";
    return stringInput
  }

  this.renderIntegerInput = function(json) {
    integerInput = "<label>" + json.label + "</label><input type='number' value='" + json.value + "' id='integer-input' required />";
    return integerInput
  }

  this.renderFloatInput = function(json) {
    floatInput = "<label>" + json.label + "</label><input type='number' value='" + json.value + "' id='float-input' required />";
    return floatInput
  }

  this.render = function(json) {

    if (!this.instance)
        this.createInstance();

    var html = this.template;
    html = html.replace("{{ title }}", json.title);

    // create some inputs
    var inputs = "";
    json.inputs.forEach(function(input) {
        switch(input.type) {
            case "float":
              inputs += form.renderFloatInput(input) + "<br/>";
              break
            case "integer":
              inputs += form.renderIntegerInput(input) + "<br/>";
              break
            case "string":
            default:
              inputs += form.renderStringInput(input) + "<br/>";
              break;
        }
        console.log(inputs)
    })

    html = html.replace("{{ inputs }}", inputs);

    // connect buttons ok with validation and cancel with destroy

    // overlay the background

    this.instance.innerHTML = html;
  }

  this.destroy = function() {
    if (this.instance)
        document.body.removeChild(this.instance);
    
    this.instance = null;
  }

}

var modals = {
  show: function(json) {

    form.render(json);
  }
}